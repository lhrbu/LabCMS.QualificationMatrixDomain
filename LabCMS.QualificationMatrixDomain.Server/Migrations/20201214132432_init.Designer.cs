// <auto-generated />
using LabCMS.QualificationMatrixDomain.Server.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LabCMS.QualificationMatrixDomain.Server.Migrations
{
    [DbContext(typeof(QualificationMatrixRepository))]
    [Migration("20201214132432_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("LabCMS.QualificationMatrixDomain.Shared.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer");

                    b.HasKey("EmployeeId");

                    b.HasIndex("Name");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LabCMS.QualificationMatrixDomain.Shared.Models.EmployeeEvaluationScore", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("EmployeeId", "SkillId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SkillId");

                    b.ToTable("EmployeeEvaluationScores");
                });

            modelBuilder.Entity("LabCMS.QualificationMatrixDomain.Shared.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("LabCMS.QualificationMatrixDomain.Shared.Models.PositionRequirementScore", b =>
                {
                    b.Property<int>("PositionId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("PositionId", "SkillId");

                    b.HasIndex("PositionId");

                    b.HasIndex("SkillId");

                    b.ToTable("PositionRequirementScores");
                });

            modelBuilder.Entity("LabCMS.QualificationMatrixDomain.Shared.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SkillDomainId")
                        .HasColumnType("integer");

                    b.HasKey("SkillId");

                    b.HasIndex("Name");

                    b.HasIndex("SkillDomainId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("LabCMS.QualificationMatrixDomain.Shared.Models.SkillDomain", b =>
                {
                    b.Property<int>("SkillDomainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SkillDomainId");

                    b.ToTable("SkillDomains");
                });

            modelBuilder.Entity("LabCMS.QualificationMatrixDomain.Shared.Models.Employee", b =>
                {
                    b.HasOne("LabCMS.QualificationMatrixDomain.Shared.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("LabCMS.QualificationMatrixDomain.Shared.Models.EmployeeEvaluationScore", b =>
                {
                    b.HasOne("LabCMS.QualificationMatrixDomain.Shared.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabCMS.QualificationMatrixDomain.Shared.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("LabCMS.QualificationMatrixDomain.Shared.Models.PositionRequirementScore", b =>
                {
                    b.HasOne("LabCMS.QualificationMatrixDomain.Shared.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabCMS.QualificationMatrixDomain.Shared.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("LabCMS.QualificationMatrixDomain.Shared.Models.Skill", b =>
                {
                    b.HasOne("LabCMS.QualificationMatrixDomain.Shared.Models.SkillDomain", "SkillDomain")
                        .WithMany()
                        .HasForeignKey("SkillDomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SkillDomain");
                });
#pragma warning restore 612, 618
        }
    }
}
